#!/usr/bin/osascript -l JavaScript

ObjC.import("stdlib");
ObjC.import("Foundation");

var app = Application.currentApplication();
app.includeStandardAdditions = true;

const Finder = Application("Finder");
const Notes = Application("Notes");

const FileManager = $.NSFileManager.defaultManager;

function run(argv) {
  const output = argv[0];
  const tmpdir = "/tmp/Notes";

  FileManager.createDirectoryAtPathWithIntermediateDirectoriesAttributesError(
    tmpdir,
    true,
    {},
    null
  );
  FileManager.changeCurrentDirectoryPath(tmpdir);

  for (const note of Notes.notes()) {
    writeToFile(`${tmpdir}/${note.name()}.html`, note.body());
  }

  if (output.match(/.zip$/)) {
    $.system(`zip -r "${output}" .`);
  } else if (output.match(/.(tgz|gz)$/)) {
    $.system(`tar -cvzf "${output}" .`);
  } else {
    $.system(`cp -R . "${output}"`);
  }

  FileManager.changeCurrentDirectoryPath("/");
  FileManager.removeItemAtPathError(tmpdir, null);
}

function writeToFile(filename, data) {
  const str = $.NSString.alloc.initWithUTF8String(data);
  str.writeToFileAtomicallyEncodingError(
    filename,
    true,
    $.NSUTF8StringEncoding,
    null
  );
}
